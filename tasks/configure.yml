---

-
  name: "Manage custom mime types, if defined"
  become: true
  ansible.builtin.lineinfile: >-
    {{ item | combine({
      'path': nginx_mime_path,
      'owner': nginx_owner,
      'group': nginx_group,
      'mode': '0644',
      'insertbefore': '^}$'
      }) }}
  loop: "{{ nginx_mime_extra | list }}"
  when:
    - "nginx_mime_extra | length > 0"
  notify:
    - "Reload nginx service"
  tags:
    - "skip_ansible_lint"

-
  name: "Manage nginx.conf"
  become: true
  ansible.builtin.template:
    src: "nginx.conf.j2"
    dest: "{{ nginx_config_path }}"
    owner: "{{ nginx_owner }}"
    group: "{{ nginx_group }}"
    mode: "0644"
  notify:
    - "Validate nginx config"
    - "Reload nginx service"

-
  name: "Manage vhost configs"
  become: true
  ansible.builtin.template:
    src: "vhost.conf.j2"
    dest: "{{ nginx_vhost_dir }}/{{ item.key }}.conf"
    owner: "{{ nginx_owner }}"
    group: "{{ nginx_group }}"
    mode: "0644"
  loop: "{{ nginx_vhosts | dict2items }}"
  when:
    - "item.value.state is not defined or item.value.state == 'present'"
  notify:
    - "Validate nginx config"
    - "Reload nginx service"

-
  name: "Manage vhost config state"
  become: true
  ansible.builtin.file:
    path: "{{ nginx_vhost_dir }}/{{ item.key }}.conf"
    owner: "{{ nginx_owner }}"
    group: "{{ nginx_group }}"
    mode: "0644"
    state: "absent"
  loop: "{{ nginx_vhosts | dict2items }}"
  when:
    - "item.value.state is defined and item.value.state == 'absent'"
  notify:
    - "Validate nginx config"
    - "Reload nginx service"
